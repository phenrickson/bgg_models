---
title: "Predicting Upcoming Board Games"
subtitle: "Predictive Models for BoardGameGeek Ratings"
editor: source
echo: false
format: 
    html:
        html-table-processing: none
---

```{r}
#| include: false
#| label: load packages and targets
library(dplyr)
library(bggUtils)
library(tidymodels)
library(vetiver)
library(gert)
library(qs2)
library(quarto)
library(targets)
library(tarchetypes)

# load src code
tar_source("src")

# project settings
config <- config::get()

# authenticate
authenticate_to_gcs()

# load in objects from pipeline
tar_load(valid_predictions)
tar_load(valid_metrics)
tar_load(details)
tar_load(hurdle_threshold)
tar_load(valid_hurdle_metrics)
tar_load(hurdle_results)

# find valid_years
valid_years =
    valid_predictions |>
    summarize(min_year = min(yearpublished), max_year = max(yearpublished))

# set ggplot theme
theme_set(bggUtils::theme_bgg())
```

```{r}
#| include: false
#| label: load games from gcs

# load games from gcp
games_raw =
    get_games_from_gcp(bucket = "bgg_data")

# prepare games with preprocessor
games =
    games_raw |>
    prepare_games()
```

```{r}
#| message: false
#| warning: false
#| label: load predictions

# read in predictions
board = pins::board_folder("data/processed")
predictions = pins::pin_read(board, name = "predictions") |>
    inner_join(games)

```

# Models

I use historical data from BoardGameGeek (BGG) to train a number of predictive models for community ratings. I first classify games based on their probability of achieving a minimum number of ratings on BGG. I then estimate each game's complexity (average weight) in order to predicts its number of user ratings and average rating. I then use these estimates to predict the expected Geek Rating.

```{r}
#| message: false
#| warning: false
#| label: filter to upcoming games

end_valid_year = valid_years$max_year

upcoming_games =
    games |>
    filter(yearpublished > end_valid_year)

```

## Upcoming Games

The following table displays predicted BGG outcomes for games that are expected to achieve at least 25 user ratings.

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: upcoming-games-table
#| column: screen-inset-right

# table
predictions |>
    filter(.pred_hurdle_class == 'yes') |>
    # this goddamn bah humbug game
    filter(game_id != 388225) |>
    predictions_dt(
        games = games,
        lazy_load = TRUE,
        pageLength = 10
    ) |>
    add_colors()

```

## Top Predictions by Year

What are currently the top predictions for each year?

```{r}

years = predictions |>
    group_by(yearpublished) |>
    count() |>
    head(4) |>
    pull(yearpublished)


top_preds =
    map(
        years,
        ~ predictions |>
            filter(yearpublished == .x) |>
            arrange(desc(.pred_bayesaverage)) |>
            filter(!is.na(thumbnail)) |>
            head(25) |>
            predictions_gt(games = games) |>
            gtExtras::gt_theme_nytimes()
    )

```

::: {.panel-tabset}

### `r years[1]`

```{r}
#| class: scroll
#| column: screen-inset-right
top_preds[[1]]

```

### `r years[2]`

```{r}
#| class: scroll
#| column: screen-inset-right
top_preds[[2]]

```

### `r years[3]`

```{r}
#| class: scroll
#| column: screen-inset-right
top_preds[[3]]

```

### `r years[4]`


```{r}
#| class: scroll
#| column: screen-inset-right
top_preds[[4]]

```

:::

## Top Predictions by Category

What are the top predictions for different genres of upcoming games?

```{r}

```

::: {.panel-tabset}

### Economic


### War Game


### Card Game


### Party


:::

## Hurdle Predictions

Which games are expected to receive enough ratings to be assigned a Geek rating?

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: hurdle-table
#| column: screen-inset-right

predictions |>
    hurdle_dt(
        lazy_load = TRUE
    )

```